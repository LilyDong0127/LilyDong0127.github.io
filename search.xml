<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Deep Learning</title>
    <url>/2024/02/20/Deep-Learning/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 使用教程--自用版</title>
    <url>/2024/02/06/Hexo-%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B-%E8%87%AA%E7%94%A8%E7%89%88/</url>
    <content><![CDATA[<ul>
<li><strong>初始化博客,在指定的文件夹中初始化一个新的博客</strong><br><code>hexo init &lt;folder&gt;</code></li>
<li><strong>新建文章,可以指定标题</strong><br><code>hexo new &quot;title&quot;</code> </li>
<li><strong>生成静态文件</strong><br><code>hexo generate</code> 或 <code>hexo g</code> </li>
<li><strong>启动本地服务器</strong><br><code>hexo server</code> 或 <code>hexo s</code> </li>
<li><strong>清除缓存文件 (db.json) 和已生成的静态文件 (public)</strong><br><code>hexo clean</code> </li>
<li><strong>部署到远端</strong><br><code>hexo deploy</code> 或 <code>hexo d</code></li>
</ul>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript</title>
    <url>/2024/02/06/javascript/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>Matlab</title>
    <url>/2024/02/20/matlab/</url>
    <content><![CDATA[<p>matlab</p>
]]></content>
      <categories>
        <category>Matlab</category>
      </categories>
      <tags>
        <tag>Matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown 使用教程</title>
    <url>/2024/02/06/markdown-%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h1 id="一级标题-1"><a href="#一级标题-1" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题-1"><a href="#二级标题-1" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><p>段落换行是两个空格以上加上回车<br>段落后面使用一个空行来表示重新开始一个段落</p>
<p><em>斜体文本</em><br><em>斜体文本</em><br><strong>粗体文本</strong><br><strong>粗体文本</strong><br><em><strong>粗斜体文本</strong></em><br><em><strong>粗斜体文本</strong></em></p>
<p>分割线：可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线</p>
<hr>
<hr>
<hr>
<hr>
<hr>
<p><del>删除线</del><br><u>带下划线文本</u></p>
<p>创建脚注格式类似这样 [^标注]。<br>[^标注]: 这是一个标注</p>
<ul>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ul>
<ul>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ul>
<ul>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ul>
<ol>
<li><p>第一项</p>
</li>
<li><p>第二项</p>
</li>
<li><p>第三项</p>
</li>
<li><p>第一项：</p>
<ul>
<li>第一项嵌套的第一个元素</li>
<li>第一项嵌套的第二个元素</li>
</ul>
</li>
<li><p>第二项：</p>
<ul>
<li>第二项嵌套的第一个元素</li>
<li>第二项嵌套的第二个元素</li>
</ul>
</li>
</ol>
<blockquote>
<p>区块引用</p>
</blockquote>
<blockquote>
<p>最外层</p>
<blockquote>
<p>第一层嵌套</p>
<blockquote>
<p>第二层嵌套</p>
</blockquote>
</blockquote>
</blockquote>
<p><code>printf()</code> 函数</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;print&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>表头</th>
<th>表头</th>
</tr>
</thead>
<tbody><tr>
<td>单元格</td>
<td>单元格</td>
</tr>
<tr>
<td>单元格</td>
<td>单元格</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="left">左对齐</th>
<th align="right">右对齐</th>
<th align="center">居中对齐</th>
</tr>
</thead>
<tbody><tr>
<td align="left">单元格</td>
<td align="right">单元格</td>
<td align="center">单元格</td>
</tr>
<tr>
<td align="left">单元格</td>
<td align="right">单元格</td>
<td align="center">单元格</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Python学习 --参考菜鸟教程Python3教程（windows版本）</title>
    <url>/2024/02/06/python/</url>
    <content><![CDATA[<h3 id="文件相关"><a href="#文件相关" class="headerlink" title="文件相关"></a>文件相关</h3><p><em>windows可以使用<code>win(windows键)+R</code>，打开输入<code>cmd</code>打开指令运行页面即可</em></p>
<p>常见指令有：</p>
<ul>
<li><code>python -V 或 python --version</code>可以查看下载的python版本</li>
<li>因为python有独特的交互式编程模式，输入指令<code>python</code>即可进入</li>
</ul>
<p>创建文件：</p>
<ul>
<li>创建的文件后缀为<code>.py</code></li>
<li>如果需要运行文件，请输入命令<code>python ***.py</code>，即可运行文件</li>
</ul>
<blockquote>
<p><em>python是一种解释性语言（没有编译过程），是一种面向对象的编程语言（Python支持面向对象的风格或代码封装在对象的编程技术），是一种交互式语言（输入<code>python</code>后，在<code>&gt;&gt;&gt;</code>后可以输入代码直接执行</em></p>
<blockquote>
<p>这里下载安装python的具体步骤暂时不提，主要集中于python的数据结构，语法和项目等</p>
</blockquote>
</blockquote>
<h3 id="python保留字"><a href="#python保留字" class="headerlink" title="python保留字"></a>python保留字</h3><p>  保留字即关键字，我们不能把它们用作任何标识符名称。Python 的标准库提供了一个 keyword 模块，可以输出当前版本的所有关键字：<br><code>[&#39;False&#39;, &#39;None&#39;, &#39;True&#39;, &#39;and&#39;, &#39;as&#39;, &#39;assert&#39;, &#39;break&#39;, &#39;class&#39;, &#39;continue&#39;, &#39;def&#39;, &#39;del&#39;, &#39;elif&#39;, &#39;else&#39;, &#39;except&#39;, &#39;finally&#39;, &#39;for&#39;, &#39;from&#39;, &#39;global&#39;, &#39;if&#39;, &#39;import&#39;, &#39;in&#39;, &#39;is&#39;, &#39;lambda&#39;, &#39;nonlocal&#39;, &#39;not&#39;, &#39;or&#39;, &#39;pass&#39;, &#39;raise&#39;, &#39;return&#39;, &#39;try&#39;, &#39;while&#39;, &#39;with&#39;, &#39;yield&#39;]</code></p>
<h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><ul>
<li>单行注释：<code>#</code></li>
<li>多行注释：<code>&#39;&#39;&#39;*&#39;&#39;&#39;</code>或者<code>&quot;&quot;&quot;**&quot;&quot;&quot;</code></li>
</ul>
<h3 id="行与缩进"><a href="#行与缩进" class="headerlink" title="行与缩进"></a>行与缩进</h3><p><em>python最具特色的就是使用缩进来表示代码块，不需要使用大括号 {}。</em><br>缩进的空格数是可变的，但是同一个代码块的语句必须包含相同的缩进空格数。实例如下：<br>实例(Python 3.0+)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if True:</span><br><span class="line">    print (&quot;True&quot;)</span><br><span class="line">else:</span><br><span class="line">    print (&quot;False&quot;)</span><br></pre></td></tr></table></figure>
<p><em>缩进不一样会导致运行错误，请注意~</em><br>如果一行太长了，可以使用反斜杠进行断句<code>\</code></p>
<h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><h4 id="数字类型-Number"><a href="#数字类型-Number" class="headerlink" title="数字类型(Number)"></a>数字类型(Number)</h4><ul>
<li>整数：int (整数), 如 1，2，3等, 只有一种整数类型 int，表示为长整型。<em>没有 python2 中的 Long</em></li>
<li>浮点数：float,如1.2等</li>
<li>布尔型：bool (布尔), 只有True或false。</li>
<li>复数：complex (复数),如j，2+j等</li>
</ul>
<h4 id="字符串类型-String"><a href="#字符串类型-String" class="headerlink" title="字符串类型(String)"></a>字符串类型(String)</h4><ul>
<li>Python中单引号’和双引号’使用完全相同(但是不可以混用，单引号用单引号结尾，双引号用双引号结尾)</li>
<li>使用三引号(‘’’ 或 “””)可以指定一个多行字符串，一般是这个格式：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">if True:</span><br><span class="line">    print (&quot;True&quot;)</span><br><span class="line">else:</span><br><span class="line">    print (&quot;False&quot;)</span><br><span class="line">&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure></li>
<li>转义符:反斜杠可以用来转义，使用 r 可以让反斜杠不发生转义。<em>如r”this is a line with \n”则\n会显示,并不是换行。</em></li>
<li>按字面意义级联字符串，如”this””is “”string”会被自动转换为this is string。</li>
<li>字符串可以用 + 运算符连接在一起，用 * 运算符重复表达。</li>
<li>Python 中的字符串有两种索引方式，从左往右以 0 开始，从右往左以 -1 开始。</li>
<li>Python 中的字符串不能改变。</li>
<li>Python 没有单独的字符类型，一个字符就是长度为 1 的字符串。</li>
<li>字符串的截取的语法格式如下：<code>变量[头下标:尾下标:步长]</code></li>
</ul>
<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>利用print输出，<code>print()</code></p>
<h3 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h3><ul>
<li>在 python 用 import 或者 from…import 来导入相应的模块。</li>
<li>将整个模块(somemodule)导入，格式为： import somemodule</li>
<li>从某个模块中导入某个函数,格式为： from somemodule import somefunction</li>
<li>从某个模块中导入多个函数,格式为： from somemodule import firstfunc, secondfunc, thirdfunc</li>
<li>将某个模块中的全部函数导入，格式为： from somemodule import *</li>
</ul>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
</search>
